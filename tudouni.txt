.LOG

svn地址
内网：svn://192.168.20.148/h5  
外网：svn://112.94.4.59:8078/h5
产品原型：https://116.62.68.101:45595/svn/doubo_product/trunk
ui设计稿：https://116.62.68.101:45595/svn/doubo_ui/trunk
账号密码
hurui；w1IaUG
无线密码：db6655td
腾讯企业邮箱：r.hu@mail.doubozhibo.com      Hu20170628
禅道项目管理系统： 
http://192.168.20.239/zentao/doc-objectLibs-product-7.html
http://pms.tudouni.doubozhibo.com/zentao/my/
hurui       Hurui666
豆播思埠git账号密码   xunyihu@163.com    hurui666
阿里云账号密码：   sibuzhibo     saptong@85505699

1，从浏览器打开app的几种方法
URL Scheme   window.location.herf   (微信屏蔽)
IOS9开启Universal Links
http://blog.csdn.net/linshijun33/article/details/71429669
http://www.jianshu.com/p/0b210021cbd7
http://forum.cocos.com/t/app/35217
http://www.jianshu.com/p/3c2a0ba09ac8

从微信唤醒app的解决方法
http://www.cnblogs.com/shadajin/p/5724117.html
http://www.magicwindow.cn/doc/#universal-link-info（魔窗公司）

魔窗账号
1170197255@qq.com       1013xhtx
魔窗论坛
xunyihu@163.com    密码忘记了
17素材
xunyihu 12345678

h5分享页面
个人主页分享： tudouni://tudouni/DnyDesc?did=18037&type=1
直播分享： 
视屏和直播分享：

土豆泥商城:
webpack配置
module.js  ->  extract-text-webpack-plugin包，该文件设置了这个加载器。
plugins.js  ->   导出了一个plugins的对象。该对象里面是几个封装的函数。
vendors.js  ->  导出了两个数组常量，里面是包名，方便require时一块引入。
webpack.config.xxx.js 这几个文件代表不同的打包文件。一般使用webpack命令会直接默认执行webpack,config.js这个js文件里面的代码。
而配置比较复杂的时候则分成多个文件来打包。使用webpack --config webpack.config.xxx.js 来执行具体的某个打包文件。

Webpack.config.dll.js文件
Plugins数组：方正就是插件的意思，辅助作用
两个元素
1.new webpack.DllPlugin({})   //调用这个实例，传一个对象
2.Plugins.getHtml()          //调用在上面引入的plugins模块中的方法

启动命令
Npm begin: 
执行了”npm run css && npm run dll && npm run dev && npm start”
Npm start: 
执行了”cross-env NODE_ENV=development node ./server/app.js”

Package.json
里面有两个陌生属性’scripts’和’betterScripts’
1.Scripts
Scripts属性是一个对象，里面指定了项目的生命周期中各个环节需要执行的命令。Key是生命周期中的时间，value是要执行的命令。
Npm run xxx ，可以执行package.json里面scripts对应的命令。
Node开发离不开npm , 而npm 脚本（npm scripts）是npm最强大最常见的功能之一。
2.bettrerScript
Better-npm-run 包
3.immutablejs   使创建的数据不可变


Node.js抓取后台api
Npm start : 执行的是这个命令
"start": "cross-env NODE_ENV=development node ./server/app.js",
使用了Cross-env包。这个命令的意思是设置环境变量NODE_ENV=development并且执行后面的命令。

App.js入口文件
1，引入了express框架
2，使用了http模块
3，compression 压缩包
4，body-parser 中间件解析器
5，cookie-parser  cookie解析器

商城首页
数据请求：浏览器 -> node.js数据 <- 服务器数据
http://localhost:9008/SibuXwsApi/resource/getResourceConfig?id=1底部数据
http://localhost:9008/SibuXwsApi/shop/selectToudoniShopSpecial中间列表商品数据
http://localhost:9008/SibuXwsApi/shop/selectToudouniShopInfo顶部轮播图数据


node.js那边对应打印的三个地址
uat代表测试环境，还有预发布环境，生产环境
http://uat.doubozhibo.com/buyer/resource/getResourceConfig?id=1&userId=1&memberId=1
http://uat.doubozhibo.com/buyer/shop/selectToudoniShopSpecial?userId=1&memberId=1
http://uat.doubozhibo.com/buyer/shop/selectToudouniShopInfo?userId=1&memberId=1
一次清楚超链接样式: ctrl+shift+f9


在首页点击到商品详情页
浏览器
http://localhost:9008/SibuXwsApi/api/collect/count 返回登陆状态
http://localhost:9008/SibuXwsApi/goods/getGoodsInfo?shopId=94&id=1214 返回商品详情
http://localhost:9008/SibuXwsApi/goods/getGoodsSku?shopId=94&id=1214  返回请求状态
http://localhost:9008/SibuXwsApi/shop/getShopInfo?shopId=94  ？？？

Node.js服务器
http://uat.doubozhibo.com/buyer/goods/getGoodsSku?shopId=94&id=1214&userId=1&memberId=1        
http://uat.doubozhibo.com/buyer/goods/getGoodsInfo?shopId=94&id=1214&userId=1&memberId=1
http://uat.doubozhibo.com/buyer/shop/getShopInfo?shopId=94&userId=1&memberId=1
http://uat.doubozhibo.com/buyer/api/collect/count?userId=1&memberId=1

商品分类
http://localhost:9008/SibuXwsApi/index/categoryList
http://uat.doubozhibo.com/buyer/index/categoryList?userId=1&memberId=1


商城路由
index.html#/home                         免费购首页
index.html#/anchor/home             网红店首页
push.html                                       主播推送页面
index.html#/shop/seller/id               主播店铺首页

0829
1，Web\client\containers\shop\goods\product.js  商品分类shopType参数没有传正确。                                 解决方法：ios,andriod跳同一个url mai.tudouni.doubozhibo.com
2，http://sellerapi.mall.doubozhibo.com/index.html#/notice/detail/5  这个页面不兼容iphone5s                     未解决（商家后台）
3，图片webp格式显示不出来，上传的时候要控制格式                                                                                   未解决（商家后台）
4，同一个手机开播时点击自己的小店，第二个账号会用第一个账号的数据，有缓存问题                                                                   未解决
待优化：
5，分类点击进去再回来每次都是到顶部
6，首页点击进入商品详情再返回有很长延迟

0830
sellerapi.mall.doubozhibo.com  域名与  pc.mall.doubozhibo.com域名内容一样   都是土豆泥卖家后台管理系统
也就是说 http://sellerapi.mall.doubozhibo.com/index.html#/notice/detail/5  ==   http://pc.mall.doubozhibo.com/#/notice/detail/5
sellerapi.mall.doubozhibo.com   应该是测试环境的     但是这个好像跟正式环境不一样 登入的时候输入000000验证码不成功   说明调用的是正式环境的接口   里面内容也一样
uat.doubozhibo.com          是土豆泥商城的测试环境

开发的时候用npm run dev   打包的时候用npm run dev:build  后一个命令是将环境改成product  本地开发的时候因为有跨域的问题开了一个node服务器而在
线上，不管是测试环境还是正式环境都有对应域名的接口不会产生跨域的问题。所以node.js开一个服务器的作用只是解决本地开发时跨域拿不到数据的问题。
而:build命令里面设置了  cross-env  "NODE_ENV": "production" 切换到正式环境    所以cross-env  "NODE_ENV": "development" 的作用是将本地开发时请求的
接口 http://192.168.20.52:8990/SibuXwsApi/cms/getCategory?id=1   的主机名替换成  http://116.62.142.128:8080/cms/getCategory?id=1 来抓取数据

路由                                                 组件                                               子组件                                                 子组件
/                                                 NoticeMain                             utils(工具类方法),content                           content( header/sliderleft )
首页分成 顶部 和 内容 两大块    内容部分又分为 左 右 两个子块
组件结构 noticemain  -->  <content >right部分</content> --> header ,  sliderleft
      

10:38 2017/8/31
仿照商城后台的环境，跑起来了一个hello world    甚是开心。不过这只是万里长征第一步，react就像一个大海，我就像个在海边冲浪的孩子，突然捡到一个贝壳，开心不已。
作为入口的app.js：本身写了一个无内容的root组件 ，它定义了store,proptypes和所有的路由。最后通过'react-dom'包的render方法 获取html页面的最外层元素id渲染root组件
root组件本身渲染出来的内容什么都没有，只有一堆路由，再通过路由定位到对应的组件。root组件的render方法最外层父元素是用'react-redux'包的Provider ,我也不知道它有什么用。
react组件    几个概念：元素，实例    元素就是一个简单简单的json对象 



15:27 2017/9/1

11:20 2017/9/4
后台管理系统 order 订单路由
orderListData -> orderStatus  1 - 7   代表待付款 - 退单  7中状态
该路由下的 props 对象有: actions, children, history, location, orderListData, params, routeParams, routes 这9个属性

redux中间件  dispatch方法?
我现在了解的react知识： 这是一个构建用户界面的前端框架，通常都要配合着一大堆配置才能有效的跑起来。react用的是jsx语法，核心思想是组件Component 。通常用redux来管理组件间的数据。react最突出的
特点就是一个‘虚拟dom';这种思想是把html结构解刨成一个json数据格式。 react页面改变的条件只有一个： 改变state，
14:58 2017/9/5
商城的代码接过来的第三个星期，总是这样心里没点逼数也不是办法。解决的办法就是，熟悉熟练他的代码，否则天天面对一推bug无从下手也不是办法。这样上班都不安心。
越着急的时候越容易慌，先不要慌。先不管任务的进度，需求，常常是突然的需求和bug打乱了现在正在看代码的思路。
现在，先着重把后台的代码搞熟悉，一个页面一个页面的看代码，最好是能够敲一遍，先以这个为主，改bug为辅助。
今天： 订单管理那一块的代码
路由 localhost:8990/index.html#/order(/:orderStatus)            组件OrderList
该组件有两个功能        搜索具体订单 和 订单信息
引入： react, redux, react-redux, order组件的actions, content组件, antd框架组件, moment包, utils工具类函数, orderList组件（订单信息组件）, refundList(退货订单操作)，download(下载组件)
SibuXwsApi/api/sellerOrder/page                           订单列表接口                 get 请求        参数：orderStatus=1&page.pageSize=20&page.currentPage=1
SibuXwsApi/api/sellerOrder/orderCount                7种订单状态的订单数量      get 请求    无参数      orderStatus 0 - 7代表订单的8种状态
订单列表默认是1点击不同状态请求sellerOrder/page 接口  传不同的orderStatus值





10:28 2017/9/6            商城后台order 订单路由
组件周期 componentDidMount  里面执行了两个函数 getOrderList()   getOrderCount()
getOrderList 函数  引入了props对象里面的actions方法    然后调用了该组件的getCondition(pageSize,currentPage) 函数来得到params
		通过params.orderStatus 值 来定义一个url: 一个是path+"/refund/queryRefundPage",//商家退款列表    一个是 path+"/sellerOrder/page",  //订单列表
		最后执行了一个actions.getOrderList(url,params)函数    获取订单列表
		getCondition(pageSize,currentPage) 函数            获取/sellerOrder/page 接口的参数：orderStatus，page.pageSize，page.currentPage
getOrderCount函数    执行了一个fetch请求    "orderCount":path+"/sellerOrder/orderCount", //各个订单状态下的订单数量  

组件周期 render        首先这个后台的页面分为两大的部分  一个是top 头部的logo和登入退出     一个是content 内容部分又分为左边slider-left（功能分内） 和右边right-content（操作功能）
		这个组件改变的是right-content这个div里面的内容。然后他又分为上中下 三个函数 来对应：订单查找，订单详情，订单分页 三个功能
		render(){ return( <Content> <div class='right-content'> { this._renderTop() }, { this._renderOrder_type() }, { this._renderPage() } </div> </Content>) }
		大致一个这样的结构，最外层由一个content标签包裹着。


		
11:01 2017/9/8       网红店商品详情页分享到朋友圈
如果小黄有安装土豆泥APP，则直接进入该商品详情，如果小黄没有安装土豆泥APP，则跳转到土豆泥APP下载提示页面。
